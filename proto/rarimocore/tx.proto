syntax = "proto3";
package rarimo.rarimocore.rarimocore;

import "rarimocore/operation.proto";
import "rarimocore/confirmation.proto";
import "rarimocore/params.proto";
import "rarimocore/violation_report.proto";
import "gogoproto/gogo.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/rarimo/rarimo-core/x/rarimocore/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateChangePartiesOperation(MsgCreateChangePartiesOp) returns (MsgCreateChangePartiesOpResponse);
  rpc CreateConfirmation(MsgCreateConfirmation) returns (MsgCreateConfirmationResponse);
  rpc SetupInitial(MsgSetupInitial) returns (MsgSetupInitialResponse);
  rpc ChangePartyAddress(MsgChangePartyAddress) returns (MsgChangePartyAddressResponse);
  rpc Stake(MsgStake) returns (MsgStakeResponse);
  rpc Unstake(MsgUnstake) returns (MsgUnstakeResponse);
  rpc ReportViolation(MsgCreateViolationReport) returns (MsgCreateViolationReportResponse);
  rpc Resign(MsgResign) returns (MsgResignResponse);

  // this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateViolationReport {
  string creator = 1;
  string sessionId = 2;
  rarimo.rarimocore.rarimocore.ViolationType violationType = 3;
  string offender = 4;
  // Optional message
  string msg = 5;
}

message MsgCreateViolationReportResponse {}

message MsgStake {
  string creator = 1;
  string account = 2;
  string address = 3;
  string trialPublicKey = 4;
}

message MsgStakeResponse {}

message MsgUnstake {
  string creator = 1;
  string account = 2;
}

message MsgUnstakeResponse {}

message MsgCreateConfirmation {
  string creator = 1;
  // hex-encoded
  string root = 2;
  repeated string indexes = 3;
  // hex-encoded
  string signatureECDSA = 4;
}
message MsgCreateConfirmationResponse {}

message MsgCreateChangePartiesOp {
  string creator = 1;
  repeated Party newSet = 2;
  string newPublicKey = 3;
  string signature = 4;
}

message MsgCreateChangePartiesOpResponse {}

message MsgSetupInitial {
  string creator = 1;
  string partyPublicKey = 2;
  string newPublicKey = 3;
}

message MsgSetupInitialResponse {}

message MsgChangePartyAddress {
  string creator = 1;
  string newAddress = 2;
}

message MsgChangePartyAddressResponse {}

message MsgResign {
  string creator = 1;
  string operation = 2;
}

message MsgResignResponse {}

// this line is used by starport scaffolding # proto/tx/message
